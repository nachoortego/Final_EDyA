5 6 1
0 0
2 2
......
.###..
...#..
......
......

R . . . . .
. # # # . .
. . F # . .
. . . . . .
. . . . . .

R . . . @ @
. # # # @ @
. @ F # @ @
. @ @ @ @ @
@ @ @ @ @ @

si no me puedo mover para ningun lado optimista, me voy para donde pueda

  for(int i = 1; i < d1 && (mapa->robot.y - i) >= 0; i++)
    if((mapa->mat[mapa->robot.y - i][mapa->robot.x] != '_') && (mapa->mat[mapa->robot.y - i][mapa->robot.x] != 'F'))
      mapa->mat[mapa->robot.y - i][mapa->robot.x] = '.'; // Sensor hacia arriba

  for(int i = 1; i < d2 && (mapa->robot.x + i) >= 0; i++)
    if((mapa->mat[mapa->robot.y + i][mapa->robot.x] != '_') && (mapa->mat[mapa->robot.y - i][mapa->robot.x] != 'F'))
      mapa->mat[mapa->robot.y + i][mapa->robot.x] = '.'; // Sensor hacia abajo

  for(int i = 1; i < d3 && (mapa->robot.x - 1) >= 0; i++)
    if((mapa->mat[mapa->robot.y][mapa->robot.x - i] != '_') && (mapa->mat[mapa->robot.y - i][mapa->robot.x] != 'F'))
      mapa->mat[mapa->robot.y][mapa->robot.x - i] = '.'; // Sensor hacia la izquierda

  for(int i = 1; i < d4 && (mapa->robot.x + i) < mapa->M; i++)
    if((mapa->mat[mapa->robot.y][mapa->robot.x + i] != '_') && (mapa->mat[mapa->robot.y - i][mapa->robot.x] != 'F'))
      mapa->mat[mapa->robot.y][mapa->robot.x + i] = '.'; // Sensor hacia la derecha